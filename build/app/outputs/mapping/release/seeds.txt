io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.gms.internal.firebase-auth-api.zzjq: int zze
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.fragment.app.FragmentManager$6
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
androidx.appcompat.widget.LinearLayoutCompat
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
com.google.firebase.auth.FirebaseAuthRegistrar: com.google.firebase.auth.FirebaseAuth lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.media2.session.PlaybackInfoParcelizer: androidx.media2.session.MediaController$PlaybackInfo read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
com.facebook.FacebookRequestError: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzoa: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void addCustomAction(android.media.session.PlaybackState$Builder,android.media.session.PlaybackState$CustomAction)
me.carda.awesome_notifications.externalLibs.CronExpression: long serialVersionUID
com.google.android.gms.internal.firebase-auth-api.zzhj: int zze
me.carda.awesome_notifications.notifications.broadcastReceivers.KeepOnTopActionReceiver
com.google.firebase.auth.FirebaseAuth
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.media2.session.StarRatingParcelizer: androidx.media2.session.StarRating read(androidx.versionedparcelable.VersionedParcel)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.os.Bundle getExtras(android.media.session.PlaybackState$CustomAction)
androidx.media2.session.StarRatingParcelizer: StarRatingParcelizer()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: android.os.Parcelable$Creator CREATOR
com.facebook.LoggingBehavior: com.facebook.LoggingBehavior valueOf(java.lang.String)
com.facebook.CustomTabMainActivity
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.google.gson.JsonSyntaxException: long serialVersionUID
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: java.util.List getCustomActions(android.media.session.PlaybackState)
com.google.android.gms.internal.firebase-auth-api.zzeq
com.google.android.gms.internal.firebase-auth-api.zzeq: com.google.android.gms.internal.firebase-auth-api.zzet zzf
com.google.android.gms.internal.firebase-auth-api.zziv: com.google.android.gms.internal.firebase-auth-api.zziv zzb
androidx.work.impl.WorkManagerInitializer
com.facebook.share.model.ShareOpenGraphAction: android.os.Parcelable$Creator CREATOR
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
com.facebook.FacebookSdkNotInitializedException: long serialVersionUID
com.google.common.base.Predicates$NotPredicate: long serialVersionUID
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
me.carda.awesome_notifications.notifications.enumeratos.GroupSort: me.carda.awesome_notifications.notifications.enumeratos.GroupSort[] values()
com.facebook.share.Share
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
com.google.android.gms.internal.firebase-auth-api.zzhj: com.google.android.gms.internal.firebase-auth-api.zzhj zzb
androidx.media.AudioAttributesImplBase
com.google.common.collect.AbstractMapBasedMultimap: long serialVersionUID
com.google.common.util.concurrent.AbstractFuture: java.lang.Object value
androidx.media2.session.SessionToken: SessionToken()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.gms.internal.firebase-auth-api.zzgm: int zze
androidx.lifecycle.SavedStateHandleController
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
com.google.common.collect.ImmutableList$SerializedForm: long serialVersionUID
androidx.appcompat.widget.AppCompatCheckBox
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.metadata.id3.ChapterFrame: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.media2.session.SessionTokenImplLegacyParcelizer: void write(androidx.media2.session.SessionTokenImplLegacy,androidx.versionedparcelable.VersionedParcel)
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener listeners
androidx.media2.session.HeartRatingParcelizer: void write(androidx.media2.session.HeartRating,androidx.versionedparcelable.VersionedParcel)
androidx.media2.common.Rating
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.media2.common.VideoSize: VideoSize()
com.google.common.collect.ImmutableMap$SerializedForm: long serialVersionUID
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.ReflectedParcelable
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.android.gms.internal.firebase-auth-api.zzgu
androidx.media.app.NotificationCompat$Api21Impl: android.app.Notification$MediaStyle createMediaStyle()
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.google.android.gms.internal.firebase-auth-api.zzim: java.lang.String zzi
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.media2.common.UriMediaItem
com.google.common.collect.ImmutableListMultimap: void writeObject(java.io.ObjectOutputStream)
com.google.common.util.concurrent.AbstractFuture$Waiter: com.google.common.util.concurrent.AbstractFuture$Waiter next
com.facebook.share.internal.DeviceShareDialogFragment: DeviceShareDialogFragment()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.media2.common.TrackInfoParcelizer
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.media2.common.VideoSize
androidx.media2.common.MediaItem
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.google.common.reflect.TypeToken$SimpleTypeToken: long serialVersionUID
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
com.google.android.gms.internal.firebase-auth-api.zzjn: com.google.android.gms.internal.firebase-auth-api.zzjn zzb
com.facebook.appevents.PersistedEvents
com.google.common.collect.Multimaps$CustomListMultimap
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.google.android.gms.internal.firebase-auth-api.zziv: int zzf
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.FacebookRequestError$Category: com.facebook.FacebookRequestError$Category[] values()
com.google.common.primitives.Shorts$ShortArrayAsList: long serialVersionUID
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.work.ArrayCreatingInputMerger: ArrayCreatingInputMerger()
com.google.common.collect.ImmutableList
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.facebook.applinks.AppLinks
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
androidx.media2.common.MediaItemParcelizer
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.media.AudioManagerCompat$Api26Impl: int requestAudioFocus(android.media.AudioManager,android.media.AudioFocusRequest)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)
com.google.common.collect.ImmutableListMultimap: void readObject(java.io.ObjectInputStream)
com.google.android.exoplayer2.metadata.mp4.SlowMotionData: android.os.Parcelable$Creator CREATOR
androidx.media2.common.MediaItemParcelizer: MediaItemParcelizer()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.facebook.login.FacebookLiteLoginMethodHandler: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
com.google.android.gms.internal.firebase-auth-api.zzmu: android.os.Parcelable$Creator CREATOR
com.google.zxing.oned.Code128Writer$CType: com.google.zxing.oned.Code128Writer$CType[] values()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.ryanheise.audioservice.AudioService: AudioService()
com.facebook.appevents.AppEvent$SerializationProxyV2: java.lang.Object readResolve()
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
com.google.firebase.auth.PhoneMultiFactorInfo: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
com.google.common.collect.ImmutableMap$SerializedForm
androidx.media2.common.SubtitleDataParcelizer
kotlin.collections.EmptySet: long serialVersionUID
com.google.android.gms.internal.firebase-auth-api.zzhw: com.google.android.gms.internal.firebase-auth-api.zzhw zzb
kotlin.collections.EmptyList: java.lang.Object readResolve()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.exoplayer2.metadata.mp4.MotionPhotoMetadata: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.google.android.gms.internal.firebase-auth-api.zzjq: com.google.android.gms.internal.firebase-auth-api.zzyu zzf
com.facebook.share.model.ShareOpenGraphObject: android.os.Parcelable$Creator CREATOR
androidx.media2.session.SessionToken
kotlin.collections.EmptyList: long serialVersionUID
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.media2.session.ConnectionResultParcelizer
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setActions(android.media.session.PlaybackState$Builder,long)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.firebase-auth-api.zzlm: android.os.Parcelable$Creator CREATOR
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.google.firebase.auth.PhoneAuthCredential: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.gms.internal.firebase-auth-api.zzet: com.google.android.gms.internal.firebase-auth-api.zzet zzb
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.gson.internal.LinkedTreeMap: java.lang.Object writeReplace()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.facebook.AccessTokenSource: com.facebook.AccessTokenSource valueOf(java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: java.lang.CharSequence getErrorMessage(android.media.session.PlaybackState)
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuth getInstance(com.google.firebase.FirebaseApp)
androidx.media2.session.PercentageRating: PercentageRating()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.google.common.reflect.Types$ParameterizedTypeImpl: long serialVersionUID
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
androidx.work.impl.workers.CombineContinuationsWorker
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.upstream.FileDataSource$PlatformOperationsWrapperV21: boolean isPermissionError(java.lang.Throwable)
com.google.android.gms.common.api.GoogleApiActivity
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setExtras(android.media.session.PlaybackState$CustomAction$Builder,android.os.Bundle)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newThumbRating(boolean)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
com.google.android.gms.internal.firebase-auth-api.zzht: com.google.android.gms.internal.firebase-auth-api.zzhz zzf
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: int MODULE_VERSION
com.facebook.login.DeviceAuthMethodHandler: android.os.Parcelable$Creator CREATOR
androidx.browser.browseractions.BrowserActionsFallbackMenuView
com.google.android.gms.internal.firebase-auth-api.zzvv: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzye: int zza
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
androidx.media2.session.SessionToken$SessionTokenImpl
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat[] values()
com.google.firebase.auth.internal.zzz: android.os.Parcelable$Creator CREATOR
androidx.media2.session.SessionCommandParcelizer: void write(androidx.media2.session.SessionCommand,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.firebase-auth-api.zzie
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
me.carda.awesome_notifications.notifications.enumeratos.NotificationSource: me.carda.awesome_notifications.notifications.enumeratos.NotificationSource valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzlu: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.room.MultiInstanceInvalidationService
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.google.android.gms.internal.firebase-auth-api.zzha: int zzg
com.google.android.gms.internal.firebase-auth-api.zzie: com.google.android.gms.internal.firebase-auth-api.zzyu zzf
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: long serialVersionUID
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.drm.DrmUtil$PlatformOperationsWrapperV18: boolean isNotProvisionedException(java.lang.Throwable)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI[] values()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.media2.session.SessionResultParcelizer: void write(androidx.media2.session.SessionResult,androidx.versionedparcelable.VersionedParcel)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
com.google.android.gms.common.annotation.KeepName
android.support.v4.media.MediaMetadataCompat
com.google.android.gms.internal.firebase-auth-api.zzzw: int zzd
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.appcompat.widget.ActivityChooserView$InnerLayout
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzfu: int zze
com.google.android.gms.internal.firebase-auth-api.zzjf: com.google.android.gms.internal.firebase-auth-api.zzjf zzb
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.google.common.base.Present: long serialVersionUID
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.cardview.widget.CardView: float getRadius()
com.google.android.gms.internal.firebase-auth-api.zzfr: int zze
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.google.android.gms.internal.firebase-auth-api.zzij: int zzg
android.support.v4.media.MediaBrowserCompat$ItemReceiver
com.google.android.gms.internal.firebase-auth-api.zzmy: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.google.android.exoplayer2.Format: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.work.OverwritingInputMerger: OverwritingInputMerger()
androidx.media2.common.MediaMetadata
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
androidx.media.session.MediaButtonReceiver: MediaButtonReceiver()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,byte[])
com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.google.android.gms.internal.firebase-auth-api.zzgd
com.facebook.login.LoginClient: android.os.Parcelable$Creator CREATOR
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.safetynet.zzd: android.os.Parcelable$Creator CREATOR
androidx.media2.session.SessionResultParcelizer: SessionResultParcelizer()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.gms.internal.firebase-auth-api.zziv: int zzg
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.firebase.auth.internal.zzbb: android.os.Parcelable$Creator CREATOR
com.google.common.collect.EmptyImmutableListMultimap: long serialVersionUID
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
androidx.media2.session.PlaybackInfoParcelizer
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.facebook.referrals.ReferralFragment
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: HlsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
android.support.v4.media.AudioAttributesImplApi21Parcelizer
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.google.android.exoplayer2.metadata.id3.ApicFrame: android.os.Parcelable$Creator CREATOR
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
androidx.media2.common.SubtitleData
androidx.media2.common.MediaMetadataParcelizer
com.google.android.gms.internal.firebase-auth-api.zzgu: com.google.android.gms.internal.firebase-auth-api.zzij zze
io.flutter.embedding.android.FlutterSplashView$SavedState
com.facebook.login.GetTokenLoginMethodHandler: android.os.Parcelable$Creator CREATOR
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: android.view.Surface getVideoSurface()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.media2.session.CommandButtonParcelizer: void write(androidx.media2.session.MediaSession$CommandButton,androidx.versionedparcelable.VersionedParcel)
me.carda.awesome_notifications.notifications.enumeratos.NotificationLifeCycle: me.carda.awesome_notifications.notifications.enumeratos.NotificationLifeCycle[] values()
androidx.media2.session.StarRatingParcelizer
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.google.android.gms.internal.firebase-auth-api.zzmk: android.os.Parcelable$Creator CREATOR
androidx.media2.common.MediaParcelUtils$MediaItemParcelImpl
androidx.media2.session.PlaybackInfoParcelizer: PlaybackInfoParcelizer()
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.ryanheise.audioservice.MediaButtonReceiver: MediaButtonReceiver()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.work.impl.utils.futures.AbstractFuture$Waiter: java.lang.Thread thread
androidx.multidex.MultiDexApplication
androidx.work.impl.workers.DiagnosticsWorker: DiagnosticsWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.gms.internal.firebase-auth-api.zzhw: com.google.android.gms.internal.firebase-auth-api.zzhz zze
com.google.android.gms.internal.firebase-auth-api.zzgg: com.google.android.gms.internal.firebase-auth-api.zzyu zzf
android.support.v4.media.RatingCompat$Api19Impl: boolean isThumbUp(android.media.Rating)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,byte[],int)
com.google.android.gms.internal.firebase-auth-api.zzez: com.google.android.gms.internal.firebase-auth-api.zzhw zzf
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzgp: com.google.android.gms.internal.firebase-auth-api.zzgp zzb
com.google.android.gms.internal.firebase-auth-api.zzne: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.google.android.gms.internal.firebase-auth-api.zzij: java.lang.String zze
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.cardview.widget.CardView: int getContentPaddingTop()
com.google.android.gms.internal.firebase-auth-api.zzfc: com.google.android.gms.internal.firebase-auth-api.zzfi zzf
com.google.android.gms.internal.firebase-auth-api.zzmq: android.os.Parcelable$Creator CREATOR
com.facebook.appevents.ml.ModelManager$Task: com.facebook.appevents.ml.ModelManager$Task valueOf(java.lang.String)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.common.collect.ImmutableMap: java.lang.Object writeReplace()
android.support.v4.app.RemoteActionCompatParcelizer
com.google.android.gms.internal.firebase-auth-api.zzhz: com.google.android.gms.internal.firebase-auth-api.zzhz zzb
com.facebook.appevents.PersistedEvents: java.lang.Object writeReplace()
com.facebook.appevents.codeless.internal.EventBinding$MappingMethod: com.facebook.appevents.codeless.internal.EventBinding$MappingMethod valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.media2.session.LibraryResult: LibraryResult()
com.google.android.gms.internal.firebase-auth-api.zzhz: int zzf
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.android.gms.common.internal.zza: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
com.google.firebase.components.ComponentDiscoveryService
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)
androidx.media2.session.SessionResult
com.google.android.gms.auth.api.signin.RevocationBoundService
com.google.firebase.auth.ActionCodeSettings: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.firebase.auth.UserProfileChangeRequest: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.work.impl.WorkDatabase: WorkDatabase()
androidx.media2.session.SessionCommandGroup: SessionCommandGroup()
me.carda.awesome_notifications.notifications.enumeratos.ActionButtonType: me.carda.awesome_notifications.notifications.enumeratos.ActionButtonType valueOf(java.lang.String)
com.facebook.share.internal.DeviceShareDialogFragment
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.google.android.gms.internal.firebase-auth-api.zzhj: int zzf
com.google.firebase.auth.GoogleAuthCredential: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
kotlin.text.Regex: java.lang.Object writeReplace()
com.google.android.gms.internal.firebase-auth-api.zzwh: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void attachToNative(boolean)
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
androidx.media2.common.VideoSizeParcelizer: void write(androidx.media2.common.VideoSize,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
android.support.v4.media.MediaBrowserCompat$MediaItem
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zzie zze
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.android.gms.internal.firebase-auth-api.zzjc
com.google.common.collect.ImmutableSet$SerializedForm: long serialVersionUID
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.facebook.share.Share: Share()
me.carda.awesome_notifications.utils.JsonUtils$1
com.google.android.exoplayer2.metadata.dvbsi.AppInfoTable: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.media2.session.PercentageRatingParcelizer: void write(androidx.media2.session.PercentageRating,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.google.android.gms.internal.firebase-auth-api.zzacp: com.google.android.gms.internal.firebase-auth-api.zzacp[] values()
androidx.media2.session.SessionCommandGroupParcelizer: SessionCommandGroupParcelizer()
androidx.cardview.widget.CardView
androidx.work.impl.diagnostics.DiagnosticsReceiver
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.google.firebase.provider.FirebaseInitProvider
androidx.work.impl.workers.ConstraintTrackingWorker: ConstraintTrackingWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: ConstraintProxy$BatteryNotLowProxy()
com.google.firebase.auth.EmailAuthCredential: android.os.Parcelable$Creator CREATOR
androidx.media2.common.TrackInfoParcelizer: TrackInfoParcelizer()
androidx.multidex.MultiDexApplication: MultiDexApplication()
com.google.common.base.Optional: long serialVersionUID
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
kotlin.collections.EmptyMap: long serialVersionUID
com.facebook.appevents.AccessTokenAppIdPair$SerializationProxyV1
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.google.android.gms.internal.firebase-auth-api.zzfo: com.google.android.gms.internal.firebase-auth-api.zzfr zze
com.google.android.gms.internal.firebase-auth-api.zzxq: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.media.AudioAttributesImplBaseParcelizer
androidx.lifecycle.Lifecycling$1
com.google.android.exoplayer2.drm.DrmUtil$PlatformOperationsWrapperV23: boolean isMediaDrmResetException(java.lang.Throwable)
androidx.core.content.FileProvider: FileProvider()
com.google.android.exoplayer2.metadata.mp4.MdtaMetadataEntry: android.os.Parcelable$Creator CREATOR
com.google.common.collect.ByFunctionOrdering: long serialVersionUID
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
androidx.appcompat.widget.SearchView: void setInputType(int)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
com.google.android.exoplayer2.metadata.id3.PrivFrame: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getActions(android.media.session.PlaybackState)
com.google.android.gms.internal.firebase-auth-api.zzen: int zze
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.google.firebase.auth.internal.zzp: android.os.Parcelable$Creator CREATOR
com.facebook.messenger.Messenger
androidx.work.ListenableWorker: ListenableWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.facebook.appevents.AppEvent: long serialVersionUID
com.google.android.gms.internal.firebase-auth-api.zzni: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.drm.DrmUtil$PlatformOperationsWrapperV21: boolean isMediaDrmStateException(java.lang.Throwable)
android.support.v4.media.AudioAttributesImplBaseParcelizer
com.google.android.gms.internal.firebase-auth-api.zzgd: com.google.android.gms.internal.firebase-auth-api.zzgd zzb
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.media2.session.ConnectionRequestParcelizer: void write(androidx.media2.session.ConnectionRequest,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
androidx.appcompat.widget.ViewStubCompat
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.google.android.gms.internal.firebase-auth-api.zzzw: com.google.android.gms.internal.firebase-auth-api.zzaca zzc
androidx.media2.session.SessionTokenImplBaseParcelizer: void write(androidx.media2.session.SessionTokenImplBase,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.firebase-auth-api.zzig: com.google.android.gms.internal.firebase-auth-api.zzig[] values()
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.google.android.gms.internal.firebase-auth-api.zzaaf: com.google.android.gms.internal.firebase-auth-api.zzaaf[] values()
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.view.FlutterView: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
com.google.android.exoplayer2.metadata.id3.CommentFrame: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice[] values()
com.google.common.collect.ImmutableList$SerializedForm
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.work.impl.background.systemalarm.RescheduleReceiver: RescheduleReceiver()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setIconBitmap(android.media.MediaDescription$Builder,android.graphics.Bitmap)
com.google.android.gms.internal.firebase-auth-api.zzew: com.google.android.gms.internal.firebase-auth-api.zzht zzg
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.google.common.collect.CompactHashMap
androidx.work.ListenableWorker
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
com.facebook.common.Common: Common()
android.support.v4.media.RatingCompat
com.facebook.login.DefaultAudience: com.facebook.login.DefaultAudience[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[])
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.google.android.exoplayer2.metadata.flac.PictureFrame: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.media2.session.LibraryResultParcelizer: androidx.media2.session.LibraryResult read(androidx.versionedparcelable.VersionedParcel)
androidx.media2.session.SessionTokenParcelizer: SessionTokenParcelizer()
com.facebook.internal.FacebookInitProvider: FacebookInitProvider()
com.google.android.gms.internal.firebase-auth-api.zzzt: com.google.android.gms.internal.firebase-auth-api.zzzo zzb
com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$ServiceResult: com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$ServiceResult valueOf(java.lang.String)
androidx.media2.common.TrackInfoParcelizer: androidx.media2.common.SessionPlayer$TrackInfo read(androidx.versionedparcelable.VersionedParcel)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor[] values()
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzht: com.google.android.gms.internal.firebase-auth-api.zzyu zzg
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.FitWindowsLinearLayout
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.google.android.gms.internal.firebase-auth-api.zznu: android.os.Parcelable$Creator CREATOR
com.google.common.collect.ImmutableSet$SerializedForm
com.google.common.collect.ImmutableListMultimap
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuth getInstance()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.google.android.gms.internal.firebase-auth-api.zzht: com.google.android.gms.internal.firebase-auth-api.zzht zzb
androidx.work.impl.background.systemjob.SystemJobService
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.media2.session.ConnectionResultParcelizer: void write(androidx.media2.session.ConnectionResult,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getBufferedPosition(android.media.session.PlaybackState)
com.facebook.appevents.AppEventsLogger$FlushBehavior: com.facebook.appevents.AppEventsLogger$FlushBehavior[] values()
com.google.android.gms.internal.firebase-auth-api.zzny: android.os.Parcelable$Creator CREATOR
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.google.android.gms.internal.firebase-auth-api.zzhg: com.google.android.gms.internal.firebase-auth-api.zzhg zzb
com.google.android.gms.internal.firebase-auth-api.zzhd: com.google.android.gms.internal.firebase-auth-api.zzhg zzf
com.ryanheise.audioservice.AudioServiceActivity
androidx.media.AudioManagerCompat$Api26Impl: int abandonAudioFocusRequest(android.media.AudioManager,android.media.AudioFocusRequest)
com.facebook.login.CustomTabLoginMethodHandler: android.os.Parcelable$Creator CREATOR
com.ryanheise.audioservice.MediaControl: com.ryanheise.audioservice.MediaControl[] values()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: void setDefaultStereoMode(int)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.google.android.gms.internal.firebase-auth-api.zzhg: com.google.android.gms.internal.firebase-auth-api.zzha zzf
com.facebook.appevents.codeless.internal.EventBinding$ActionType: com.facebook.appevents.codeless.internal.EventBinding$ActionType valueOf(java.lang.String)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.CharSequence getSubtitle(android.media.MediaDescription)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
com.facebook.appevents.internal.AppEventsLoggerUtility$GraphAPIActivityType: com.facebook.appevents.internal.AppEventsLoggerUtility$GraphAPIActivityType valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
com.google.common.collect.CompactHashMap: void readObject(java.io.ObjectInputStream)
com.facebook.appevents.ml.ModelManager$Task: com.facebook.appevents.ml.ModelManager$Task[] values()
com.facebook.appevents.codeless.internal.EventBinding$ActionType: com.facebook.appevents.codeless.internal.EventBinding$ActionType[] values()
com.google.android.gms.auth.api.signin.RevocationBoundService: RevocationBoundService()
com.google.common.collect.RegularImmutableMap$EntrySet$1
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.google.android.exoplayer2.drm.DrmUtil$PlatformOperationsWrapperV18: boolean isDeniedByServerException(java.lang.Throwable)
com.google.common.collect.Multimaps$CustomListMultimap: long serialVersionUID
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.facebook.CurrentAccessTokenExpirationBroadcastReceiver
com.google.common.collect.NaturalOrdering: long serialVersionUID
com.google.android.gms.internal.firebase-auth-api.zzhg
com.google.android.gms.internal.firebase-auth-api.zzen
androidx.appcompat.widget.ButtonBarLayout
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
io.flutter.plugins.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
com.google.firebase.auth.internal.zzx: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.media2.session.SessionTokenImplBase: SessionTokenImplBase()
androidx.media2.session.HeartRatingParcelizer: HeartRatingParcelizer()
com.facebook.places.Places: Places()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
androidx.media.MediaBrowserServiceCompat: MediaBrowserServiceCompat()
androidx.media2.session.HeartRating
androidx.media2.session.MediaController$PlaybackInfo: MediaController$PlaybackInfo()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
com.google.android.exoplayer2.metadata.Metadata: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzmg: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.SupportErrorDialogFragment
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.media2.session.SessionCommandParcelizer: androidx.media2.session.SessionCommand read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatCheckedTextView
androidx.work.impl.workers.CombineContinuationsWorker: CombineContinuationsWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.gms.internal.firebase-auth-api.zziq
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
com.google.zxing.pdf417.encoder.Compaction: com.google.zxing.pdf417.encoder.Compaction[] values()
com.google.android.gms.internal.firebase-auth-api.zzhz: int zze
com.google.common.collect.AbstractListMultimap: long serialVersionUID
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
androidx.appcompat.widget.ContentFrameLayout
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.google.android.gms.internal.firebase-auth-api.zzho: com.google.android.gms.internal.firebase-auth-api.zzyu zze
com.google.common.collect.NaturalOrdering
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
io.flutter.view.FlutterCallbackInformation
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.String getMediaId(android.media.MediaDescription)
androidx.media2.common.MediaMetadataParcelizer: androidx.media2.common.MediaMetadata read(androidx.versionedparcelable.VersionedParcel)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
kotlin.collections.EmptySet
com.facebook.FacebookActivity: FacebookActivity()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
com.google.android.gms.internal.firebase-auth-api.zzhd: com.google.android.gms.internal.firebase-auth-api.zzhd zzb
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView
androidx.media2.session.LibraryParamsParcelizer: LibraryParamsParcelizer()
com.google.android.gms.internal.firebase-auth-api.zzha: com.google.android.gms.internal.firebase-auth-api.zzgu zzf
me.carda.awesome_notifications.notifications.broadcastReceivers.RefreshNotificationBootReceiver: RefreshNotificationBootReceiver()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: int getIcon(android.media.session.PlaybackState$CustomAction)
me.carda.awesome_notifications.notifications.broadcastReceivers.ScheduledNotificationReceiver
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.net.Uri getIconUri(android.media.MediaDescription)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
io.flutter.embedding.engine.FlutterJNI
android.support.v4.media.session.PlaybackStateCompat
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.facebook.appevents.codeless.internal.EventBinding$MappingMethod: com.facebook.appevents.codeless.internal.EventBinding$MappingMethod[] values()
com.google.gson.stream.MalformedJsonException: long serialVersionUID
com.facebook.common.Common
androidx.core.graphics.drawable.IconCompat
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.facebook.all.All
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
com.google.android.gms.internal.firebase-auth-api.zzjc: com.google.android.gms.internal.firebase-auth-api.zzjc zzb
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: void setUseSensorRotation(boolean)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.work.InputMerger: InputMerger()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
android.support.v4.media.MediaDescriptionCompat
com.google.android.exoplayer2.drm.DrmUtil$PlatformOperationsWrapperV21: int mediaDrmStateExceptionToErrorCode(java.lang.Throwable)
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
kotlin.collections.EmptySet: java.lang.Object readResolve()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.facebook.appevents.AppEvent
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
com.google.android.gms.internal.firebase-auth-api.zzna: android.os.Parcelable$Creator CREATOR
com.google.firebase.auth.internal.zzt: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
com.facebook.appevents.AccessTokenAppIdPair
com.facebook.appevents.AppEvent$SerializationProxyV2
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.facebook.login.LoginFragment
com.facebook.login.LoginBehavior: com.facebook.login.LoginBehavior valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.core.app.CoreComponentFactory
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.fragment.app.FragmentActivity: FragmentActivity()
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
androidx.cardview.widget.CardView: void setCardElevation(float)
com.google.android.gms.internal.firebase-auth-api.zzfo: com.google.android.gms.internal.firebase-auth-api.zzfo zzb
com.google.firebase.FirebaseCommonRegistrar
com.google.android.gms.internal.firebase-auth-api.zzez
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.firebase-auth-api.zznk: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzfx
com.google.android.gms.internal.firebase-auth-api.zzff: int zzf
com.facebook.internal.SmartLoginOption: com.facebook.internal.SmartLoginOption[] values()
io.flutter.view.FlutterView: float getDevicePixelRatio()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzgr: com.google.android.gms.internal.firebase-auth-api.zzgr[] values()
com.facebook.appevents.PersistedEvents: long serialVersionUID
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.google.android.gms.internal.firebase-auth-api.zzacq: com.google.android.gms.internal.firebase-auth-api.zzacq[] values()
com.google.common.collect.ImmutableEntry: long serialVersionUID
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.DialogFragment
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zziq zzb
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
androidx.media2.common.MediaItem: MediaItem()
androidx.activity.result.ActivityResultRegistry$1
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.google.android.gms.internal.firebase-auth-api.zzgg: com.google.android.gms.internal.firebase-auth-api.zzgg zzb
com.google.android.gms.internal.firebase-auth-api.zzms: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.media2.session.PercentageRatingParcelizer: androidx.media2.session.PercentageRating read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.firebase-auth-api.zzwl: android.os.Parcelable$Creator CREATOR
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.common.util.DynamiteApi
com.google.android.gms.internal.firebase-auth-api.zziz: com.google.android.gms.internal.firebase-auth-api.zzjc zzf
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State[] values()
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: ConstraintProxy$StorageNotLowProxy()
androidx.media2.common.SubtitleData: SubtitleData()
com.google.android.gms.internal.firebase-auth-api.zzie: int zzg
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.gms.internal.firebase-auth-api.zzim: int zzg
androidx.appcompat.view.menu.ListMenuItemView
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.google.android.gms.auth.TokenData: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.facebook.login.DeviceAuthDialog$RequestState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.safetynet.zzf: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
androidx.media2.session.PercentageRatingParcelizer: PercentageRatingParcelizer()
com.google.android.gms.internal.firebase-auth-api.zzfx: com.google.android.gms.internal.firebase-auth-api.zzfx zzb
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.media.MediaDescription build(android.media.MediaDescription$Builder)
com.google.android.exoplayer2.offline.StreamKey: android.os.Parcelable$Creator CREATOR
com.facebook.appevents.internal.AppEventsLoggerUtility$GraphAPIActivityType: com.facebook.appevents.internal.AppEventsLoggerUtility$GraphAPIActivityType[] values()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.media2.common.SessionPlayer$TrackInfo: SessionPlayer$TrackInfo()
androidx.work.WorkerParameters
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI valueOf(java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.google.common.collect.RegularImmutableMap$KeySet
com.google.android.exoplayer2.metadata.emsg.EventMessage: android.os.Parcelable$Creator CREATOR
com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzff
com.google.android.gms.internal.firebase-auth-api.zzfu: com.google.android.gms.internal.firebase-auth-api.zzyu zzf
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
kotlin.collections.EmptyMap: java.lang.Object readResolve()
com.google.android.gms.internal.auth.zzay: com.google.android.gms.internal.auth.zzay[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
android.support.v4.media.RatingCompat$Api19Impl: float getPercentRating(android.media.Rating)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
com.google.android.gms.internal.firebase-auth-api.zzxb: android.os.Parcelable$Creator CREATOR
androidx.media2.session.LibraryResultParcelizer: LibraryResultParcelizer()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzjf: com.google.android.gms.internal.firebase-auth-api.zzji zzf
com.google.android.gms.internal.firebase-auth-api.zzim: com.google.android.gms.internal.firebase-auth-api.zzim zzb
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.appcompat.widget.SearchView$SearchAutoComplete
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.google.android.exoplayer2.upstream.RawResourceDataSource: android.net.Uri buildRawResourceUri(int)
androidx.core.app.RemoteActionCompatParcelizer
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
androidx.media2.session.HeartRating: HeartRating()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.common.primitives.Longs$LongArrayAsList: long serialVersionUID
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.media2.session.SessionCommandGroupParcelizer: androidx.media2.session.SessionCommandGroup read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.media2.session.LibraryResultParcelizer
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.google.firebase.auth.TwitterAuthCredential: android.os.Parcelable$Creator CREATOR
me.carda.awesome_notifications.externalLibs.CronExpression: void readObject(java.io.ObjectInputStream)
androidx.media2.session.SessionTokenImplBase
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView
com.google.android.gms.safetynet.HarmfulAppsData: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.google.common.reflect.TypeToken: java.lang.Object writeReplace()
com.google.android.gms.internal.firebase-auth-api.zzfi: com.google.android.gms.internal.firebase-auth-api.zzfi zzb
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.facebook.internal.instrument.InstrumentData$Type: com.facebook.internal.instrument.InstrumentData$Type valueOf(java.lang.String)
com.ryanheise.audioservice.AudioServiceActivity: AudioServiceActivity()
com.google.android.gms.internal.firebase-auth-api.zzff: com.google.android.gms.internal.firebase-auth-api.zzff zzb
com.google.common.primitives.Doubles$DoubleArrayAsList: long serialVersionUID
com.google.android.gms.internal.firebase-auth-api.zzfl
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.activity.ImmLeaksCleaner
androidx.media2.session.SessionTokenParcelizer: void write(androidx.media2.session.SessionToken,androidx.versionedparcelable.VersionedParcel)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.versionedparcelable.CustomVersionedParcelable
com.google.android.gms.internal.firebase-auth-api.zzjn
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy
io.flutter.embedding.android.FlutterTextureView
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
com.google.common.collect.ImmutableCollection
androidx.appcompat.app.AppCompatActivity
androidx.media2.common.SubtitleDataParcelizer: void write(androidx.media2.common.SubtitleData,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat valueOf(java.lang.String)
androidx.media2.session.ConnectionRequest: ConnectionRequest()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.appcompat.widget.DialogTitle
androidx.media2.session.MediaSession$CommandButton: MediaSession$CommandButton()
kotlin.collections.EmptyList
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setState(android.media.session.PlaybackState$Builder,int,long,float,long)
com.google.android.gms.internal.firebase-auth-api.zzmi: android.os.Parcelable$Creator CREATOR
com.facebook.appevents.FlushReason: com.facebook.appevents.FlushReason[] values()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
com.google.android.exoplayer2.source.TrackGroup: android.os.Parcelable$Creator CREATOR
androidx.media.AudioAttributesImplApi26Parcelizer
com.google.zxing.oned.Code128Writer$CType: com.google.zxing.oned.Code128Writer$CType valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.google.android.gms.internal.firebase-auth-api.zzwy: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
androidx.lifecycle.ProcessLifecycleOwnerInitializer: ProcessLifecycleOwnerInitializer()
com.google.common.collect.CompactHashMap: void writeObject(java.io.ObjectOutputStream)
com.google.android.gms.common.internal.safeparcel.SafeParcelable: java.lang.String NULL
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.fragment.app.Fragment: Fragment()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.google.firebase.auth.internal.zzae: android.os.Parcelable$Creator CREATOR
io.flutter.view.FlutterView
com.google.android.exoplayer2.metadata.id3.MlltFrame: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.flutter.embedding.engine.FlutterOverlaySurface
com.google.android.gms.internal.firebase-auth-api.zzff: com.google.android.gms.internal.firebase-auth-api.zzfi zze
androidx.media2.common.MediaMetadataParcelizer: void write(androidx.media2.common.MediaMetadata,androidx.versionedparcelable.VersionedParcel)
com.google.common.collect.ImmutableCollection: java.lang.Object writeReplace()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
io.flutter.plugin.mouse.MouseCursorPlugin$2: long serialVersionUID
androidx.media.VolumeProviderCompat$Api21Impl: void setCurrentVolume(android.media.VolumeProvider,int)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.firebase-auth-api.zzfi
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.facebook.internal.FeatureManager$Feature: com.facebook.internal.FeatureManager$Feature valueOf(java.lang.String)
androidx.media2.session.SessionCommand: SessionCommand()
com.google.common.collect.ImmutableList$SerializedForm: java.lang.Object readResolve()
androidx.work.impl.background.systemalarm.SystemAlarmService: SystemAlarmService()
com.facebook.internal.FacebookDialogFragment: FacebookDialogFragment()
com.google.common.collect.ImmutableSet
androidx.media2.session.ConnectionRequestParcelizer: ConnectionRequestParcelizer()
com.facebook.LoggingBehavior: com.facebook.LoggingBehavior[] values()
com.google.android.gms.internal.firebase-auth-api.zznq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.google.android.gms.signin.internal.zab: android.os.Parcelable$Creator CREATOR
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.appcompat.widget.AppCompatTextView
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
me.carda.awesome_notifications.notifications.enumeratos.NotificationLayout: me.carda.awesome_notifications.notifications.enumeratos.NotificationLayout[] values()
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
androidx.media2.common.MediaItemParcelizer: androidx.media2.common.MediaItem read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.FacebookActivity
androidx.work.NetworkType: androidx.work.NetworkType[] values()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.google.android.gms.internal.firebase-auth-api.zznm: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzzt
com.google.android.gms.common.data.DataHolder: android.os.Parcelable$Creator CREATOR
com.google.common.collect.ReverseNaturalOrdering: java.lang.Object readResolve()
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.media2.common.MediaMetadata$BitmapEntry: MediaMetadata$BitmapEntry()
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
io.flutter.plugin.platform.SingleViewPresentation
com.google.android.gms.internal.firebase-auth-api.zziz
com.google.android.exoplayer2.metadata.flac.VorbisComment: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.google.firebase.auth.PlayGamesAuthCredential: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
androidx.room.RoomDatabase: RoomDatabase()
com.facebook.internal.CallbackManagerImpl$RequestCodeOffset: com.facebook.internal.CallbackManagerImpl$RequestCodeOffset valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean setRefreshRateFPSCalled
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
com.google.android.gms.internal.firebase-auth-api.zzzw: java.util.Map zzb
com.google.android.gms.internal.firebase-auth-api.zzgm: com.google.android.gms.internal.firebase-auth-api.zzyu zzf
com.google.android.gms.internal.firebase-auth-api.zzxu: android.os.Parcelable$Creator CREATOR
androidx.media2.common.SubtitleDataParcelizer: androidx.media2.common.SubtitleData read(androidx.versionedparcelable.VersionedParcel)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.activity.ComponentActivity$5
androidx.media2.session.ConnectionRequestParcelizer: androidx.media2.session.ConnectionRequest read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.mp4.SlowMotionData$Segment: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.facebook.internal.SmartLoginOption: com.facebook.internal.SmartLoginOption valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.google.android.gms.internal.firebase-auth-api.zzlq: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.media2.common.MediaItemParcelizer: void write(androidx.media2.common.MediaItem,androidx.versionedparcelable.VersionedParcel)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setIconUri(android.media.MediaDescription$Builder,android.net.Uri)
com.google.android.gms.internal.firebase-auth-api.zzfl: com.google.android.gms.internal.firebase-auth-api.zzfl zzb
com.facebook.appevents.FlushResult: com.facebook.appevents.FlushResult[] values()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.google.android.gms.internal.firebase-auth-api.zzht: int zze
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.media.session.PlaybackState build(android.media.session.PlaybackState$Builder)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.gms.internal.firebase-auth-api.zzma: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.signin.SignInAccount: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.media2.common.TrackInfoParcelizer: void write(androidx.media2.common.SessionPlayer$TrackInfo,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.facebook.CustomTabMainActivity: CustomTabMainActivity()
com.google.android.gms.internal.firebase-auth-api.zzfx: int zzf
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.ryanheise.audioservice.MediaControl: com.ryanheise.audioservice.MediaControl valueOf(java.lang.String)
androidx.work.Worker
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
io.flutter.view.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.media.AudioAttributesCompatParcelizer
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
androidx.work.impl.WorkDatabase
androidx.media2.common.BitmapEntryParcelizer: void write(androidx.media2.common.MediaMetadata$BitmapEntry,androidx.versionedparcelable.VersionedParcel)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.google.android.exoplayer2.metadata.id3.GeobFrame: android.os.Parcelable$Creator CREATOR
com.facebook.appevents.AppEvent$SerializationProxyV2: long serialVersionUID
com.google.android.gms.internal.firebase-auth-api.zzhw: int zzg
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.google.common.collect.Multimaps$CustomListMultimap: void readObject(java.io.ObjectInputStream)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.google.android.gms.internal.firebase-auth-api.zzha: com.google.android.gms.internal.firebase-auth-api.zzhj zze
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.core.widget.NestedScrollView: int getScrollRange()
me.carda.awesome_notifications.notifications.enumeratos.ActionButtonType: me.carda.awesome_notifications.notifications.enumeratos.ActionButtonType[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getLastPositionUpdateTime(android.media.session.PlaybackState)
com.google.firebase.auth.FirebaseAuthRegistrar: java.util.List getComponents()
com.google.android.gms.internal.firebase-auth-api.zzfo: int zzf
com.google.android.gms.internal.firebase-auth-api.zzns: android.os.Parcelable$Creator CREATOR
com.facebook.appevents.FlushReason: com.facebook.appevents.FlushReason valueOf(java.lang.String)
com.google.common.collect.RegularImmutableMap: long serialVersionUID
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.google.android.gms.internal.firebase-auth-api.zzew: com.google.android.gms.internal.firebase-auth-api.zzfc zzf
com.google.android.gms.internal.firebase-auth-api.zzew: int zze
androidx.appcompat.widget.Toolbar
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
io.flutter.view.FlutterView: io.flutter.app.FlutterPluginRegistry getPluginRegistry()
com.google.common.reflect.Types$ClassOwnership: com.google.common.reflect.Types$ClassOwnership[] values()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.google.android.gms.internal.firebase-auth-api.zzxo: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.google.android.gms.internal.firebase-auth-api.zzhz
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.gms.internal.firebase-auth-api.zzjt
com.facebook.login.LoginClient$Result$Code: com.facebook.login.LoginClient$Result$Code[] values()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newHeartRating(boolean)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.facebook.AccessToken: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzmc: android.os.Parcelable$Creator CREATOR
androidx.work.impl.WorkDatabase_Impl: WorkDatabase_Impl()
com.google.android.gms.internal.firebase-auth-api.zzwe: com.google.android.gms.internal.firebase-auth-api.zzwe[] values()
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.google.common.base.Predicates$IsEqualToPredicate: long serialVersionUID
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.core.widget.NestedScrollView
com.ryanheise.audioservice.AudioService
android.support.v4.media.RatingCompat$Api19Impl: int getRatingStyle(android.media.Rating)
com.google.common.base.Absent
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
androidx.appcompat.widget.AppCompatRadioButton
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
com.google.firebase.auth.internal.RecaptchaActivity: RecaptchaActivity()
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.lifecycle.LifecycleService: LifecycleService()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.gms.internal.firebase-auth-api.zziq: int zzg
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.facebook.FacebookRequestError$Category: com.facebook.FacebookRequestError$Category valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.firebase-auth-api.zzha: com.google.android.gms.internal.firebase-auth-api.zzha zzb
com.google.android.gms.internal.firebase-auth-api.zzhq: com.google.android.gms.internal.firebase-auth-api.zzhq[] values()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.appevents.PersistedEvents$SerializationProxyV1: long serialVersionUID
androidx.media.session.MediaButtonReceiver
com.google.common.collect.ImmutableMap
com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
android.support.v4.media.session.ParcelableVolumeInfo
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
me.carda.awesome_notifications.notifications.enumeratos.NotificationImportance: me.carda.awesome_notifications.notifications.enumeratos.NotificationImportance valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.firebase-auth-api.zziq: int zzh
androidx.media2.session.SessionTokenImplLegacyParcelizer
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
com.facebook.appevents.AccessTokenAppIdPair: long serialVersionUID
com.facebook.login.KatanaProxyLoginMethodHandler: android.os.Parcelable$Creator CREATOR
com.ryanheise.audioservice.AudioProcessingState: com.ryanheise.audioservice.AudioProcessingState valueOf(java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.facebook.appevents.AccessTokenAppIdPair: java.lang.Object writeReplace()
com.facebook.login.DefaultAudience: com.facebook.login.DefaultAudience valueOf(java.lang.String)
com.google.android.gms.safetynet.SafeBrowsingData: android.os.Parcelable$Creator CREATOR
kotlin.text.Regex
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: android.os.Parcelable$Creator CREATOR
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
me.carda.awesome_notifications.notifications.enumeratos.MediaSource: me.carda.awesome_notifications.notifications.enumeratos.MediaSource[] values()
com.google.common.reflect.Types$GenericArrayTypeImpl: long serialVersionUID
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
me.carda.awesome_notifications.notifications.enumeratos.NotificationPrivacy: me.carda.awesome_notifications.notifications.enumeratos.NotificationPrivacy valueOf(java.lang.String)
com.google.common.collect.NaturalOrdering: java.lang.Object readResolve()
androidx.media2.session.ConnectionRequest
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setMediaId(android.media.MediaDescription$Builder,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState
android.support.v4.media.session.PlaybackStateCompat$Api22Impl: android.os.Bundle getExtras(android.media.session.PlaybackState)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.google.firebase.auth.api.fallback.service.FirebaseAuthFallbackService: FirebaseAuthFallbackService()
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
com.google.common.reflect.Types$WildcardTypeImpl: long serialVersionUID
com.google.android.gms.internal.firebase-auth-api.zziv: java.lang.String zze
androidx.media2.session.SessionResultParcelizer: androidx.media2.session.SessionResult read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State[] values()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.google.android.gms.internal.firebase-auth-api.zziz: int zze
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.CharSequence getDescription(android.media.MediaDescription)
com.google.android.gms.internal.firebase-auth-api.zziw: int zze
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: ConstraintProxyUpdateReceiver()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.google.common.collect.ReverseOrdering: long serialVersionUID
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.facebook.share.model.SharePhoto: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
androidx.annotation.Keep
android.support.v4.media.session.MediaSessionCompat$QueueItem
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar
com.google.common.collect.RegularImmutableMap$EntrySet
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.facebook.AccessTokenSource: com.facebook.AccessTokenSource[] values()
com.google.android.gms.internal.firebase-auth-api.zzhg: com.google.android.gms.internal.firebase-auth-api.zzyu zzh
android.support.v4.media.MediaBrowserCompat$Api21Impl: android.media.MediaDescription getDescription(android.media.browse.MediaBrowser$MediaItem)
androidx.media.AudioFocusRequestCompat$Api26Impl: android.media.AudioFocusRequest createInstance(int,android.media.AudioAttributes,boolean,android.media.AudioManager$OnAudioFocusChangeListener,android.os.Handler)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.media.AudioAttributesImpl
androidx.media2.session.SessionCommandGroupParcelizer
androidx.work.impl.foreground.SystemForegroundService
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.gms.common.api.internal.zzd
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
io.flutter.embedding.engine.FlutterOverlaySurface: int id
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.cardview.widget.CardView: float getMaxCardElevation()
me.carda.awesome_notifications.notifications.enumeratos.MediaSource: me.carda.awesome_notifications.notifications.enumeratos.MediaSource valueOf(java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.media.session.PlaybackState$Builder createBuilder()
com.google.android.gms.internal.firebase-auth-api.zzen: com.google.android.gms.internal.firebase-auth-api.zzyu zzf
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar: FlutterFirebaseAuthRegistrar()
com.google.android.gms.internal.firebase-auth-api.zzhl: com.google.android.gms.internal.firebase-auth-api.zzhl[] values()
com.facebook.internal.FacebookDialogFragment
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.google.android.gms.internal.firebase-auth-api.zznw: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzji
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.media2.session.CommandButtonParcelizer
androidx.lifecycle.SavedStateHandleController$1
androidx.media2.session.HeartRatingParcelizer: androidx.media2.session.HeartRating read(androidx.versionedparcelable.VersionedParcel)
com.ryanheise.audioservice.AudioProcessingState: com.ryanheise.audioservice.AudioProcessingState[] values()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.work.impl.background.systemalarm.SystemAlarmService
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zziw: com.google.android.gms.internal.firebase-auth-api.zzaab zzf
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
com.google.android.exoplayer2.metadata.icy.IcyHeaders: android.os.Parcelable$Creator CREATOR
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode[] values()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
androidx.media2.session.ConnectionResultParcelizer: ConnectionResultParcelizer()
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
androidx.media2.common.VideoSizeParcelizer: androidx.media2.common.VideoSize read(androidx.versionedparcelable.VersionedParcel)
androidx.work.OverwritingInputMerger
com.google.android.gms.auth.api.signin.internal.SignInHubActivity: SignInHubActivity()
androidx.media2.common.FileMediaItem
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SearchView: void setImeOptions(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.google.android.gms.internal.firebase-auth-api.zzho: com.google.android.gms.internal.firebase-auth-api.zziw zzf
com.facebook.FacebookDialogException: long serialVersionUID
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzfu: com.google.android.gms.internal.firebase-auth-api.zzfu zzb
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.facebook.FacebookException: long serialVersionUID
com.google.android.gms.internal.firebase-auth-api.zzgj: int zzf
com.facebook.Profile: android.os.Parcelable$Creator CREATOR
android.support.v4.media.MediaDescriptionCompat$Api23Impl: void setMediaUri(android.media.MediaDescription$Builder,android.net.Uri)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.gms.internal.firebase-auth-api.zzij
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
androidx.activity.ComponentActivity: ComponentActivity()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.facebook.appevents.AccessTokenAppIdPair$SerializationProxyV1: long serialVersionUID
com.facebook.appevents.AccessTokenAppIdPair$SerializationProxyV1: java.lang.Object readResolve()
android.support.v4.media.AudioAttributesImplApi26Parcelizer
androidx.media2.session.CommandButtonParcelizer: CommandButtonParcelizer()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.cardview.widget.CardView: int getContentPaddingRight()
androidx.appcompat.widget.ActionBarContextView
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: float getPlaybackSpeed(android.media.session.PlaybackState)
com.google.android.gms.internal.firebase-auth-api.zzez: com.google.android.gms.internal.firebase-auth-api.zzez zzb
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
com.google.android.gms.internal.firebase-auth-api.zziv: int zzh
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
androidx.media2.session.ThumbRating
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.media2.session.SessionCommandGroup
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.firebase-auth-api.zzhd: int zze
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.google.common.collect.ImmutableMap$SerializedForm: java.lang.Object readResolve()
com.google.android.exoplayer2.source.TrackGroupArray: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
android.support.v4.media.session.MediaSessionCompat$QueueItem$Api21Impl: android.media.MediaDescription getDescription(android.media.session.MediaSession$QueueItem)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.google.android.gms.internal.firebase-auth-api.zzez: com.google.android.gms.internal.firebase-auth-api.zzff zze
com.google.firebase.auth.internal.GenericIdpActivity: GenericIdpActivity()
com.google.android.gms.internal.firebase-auth-api.zzew: com.google.android.gms.internal.firebase-auth-api.zzew zzb
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
com.google.gson.JsonIOException: long serialVersionUID
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
io.flutter.plugins.imagepicker.ImagePickerFileProvider
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
me.carda.awesome_notifications.notifications.enumeratos.NotificationLifeCycle: me.carda.awesome_notifications.notifications.enumeratos.NotificationLifeCycle valueOf(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.google.android.gms.internal.firebase-auth-api.zzfu
com.google.android.gms.internal.firebase-auth-api.zzgm
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.media2.session.ThumbRatingParcelizer
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.gms.internal.firebase-auth-api.zzid: com.google.android.gms.internal.firebase-auth-api.zzid[] values()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzhd: com.google.android.gms.internal.firebase-auth-api.zzyu zzg
androidx.media.AudioAttributesImplApi21
androidx.appcompat.view.menu.ActionMenuItemView
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.work.impl.workers.DiagnosticsWorker
com.facebook.CustomTabActivity
com.google.firebase.auth.api.fallback.service.FirebaseAuthFallbackService
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.cardview.widget.CardView: void setMinimumHeight(int)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.gms.internal.firebase-auth-api.zzjf: int zze
me.carda.awesome_notifications.notifications.enumeratos.NotificationImportance: me.carda.awesome_notifications.notifications.enumeratos.NotificationImportance[] values()
android.support.v4.media.session.MediaSessionCompat$Token
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.common.collect.ImmutableList: void readObject(java.io.ObjectInputStream)
com.google.zxing.datamatrix.encoder.SymbolShapeHint: com.google.zxing.datamatrix.encoder.SymbolShapeHint valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.core.Core: Core()
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver
com.google.android.gms.internal.firebase-auth-api.zzhw
vn.hunghd.flutterdownloader.DownloadWorker
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newStarRating(int,float)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: java.lang.CharSequence getName(android.media.session.PlaybackState$CustomAction)
com.google.android.gms.common.internal.ResolveAccountRequest: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.google.android.gms.internal.firebase-auth-api.zzfr
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzfo
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.media2.session.SessionTokenParcelizer: androidx.media2.session.SessionToken read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
androidx.core.app.RemoteActionCompat
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.common.collect.ImmutableSet$SerializedForm: java.lang.Object readResolve()
androidx.work.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.firebase-auth-api.zzjt: int zze
com.google.android.gms.internal.firebase-auth-api.zzwj: android.os.Parcelable$Creator CREATOR
androidx.media.app.NotificationCompat$Api21Impl: android.app.Notification$MediaStyle fillInMediaStyle(android.app.Notification$MediaStyle,int[],android.support.v4.media.session.MediaSessionCompat$Token)
io.flutter.embedding.android.FlutterView
com.google.android.gms.internal.firebase-auth-api.zzim: java.lang.String zzf
androidx.work.impl.WorkManagerInitializer: WorkManagerInitializer()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.google.android.gms.internal.firebase-auth-api.zziw
androidx.media2.session.LibraryParamsParcelizer
com.google.android.gms.internal.firebase-auth-api.zzjn: com.google.android.gms.internal.firebase-auth-api.zzaab zzf
com.google.android.gms.internal.firebase-auth-api.zziv
com.google.android.gms.internal.firebase-auth-api.zzet: int zze
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.gms.internal.firebase-auth-api.zzga
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.facebook.appevents.PersistedEvents$SerializationProxyV1: java.lang.Object readResolve()
com.facebook.messenger.Messenger: Messenger()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.gms.internal.firebase-auth-api.zzjk: com.google.android.gms.internal.firebase-auth-api.zzjk[] values()
androidx.fragment.app.DialogFragment: DialogFragment()
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
com.google.android.gms.internal.firebase-auth-api.zzga: com.google.android.gms.internal.firebase-auth-api.zzyu zzf
androidx.media2.common.VideoSizeParcelizer
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
me.carda.awesome_notifications.notifications.enumeratos.DefaultRingtoneType: me.carda.awesome_notifications.notifications.enumeratos.DefaultRingtoneType[] values()
com.google.zxing.pdf417.encoder.Compaction: com.google.zxing.pdf417.encoder.Compaction valueOf(java.lang.String)
com.google.firebase.auth.FirebaseAuthRegistrar: FirebaseAuthRegistrar()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setActiveQueueItemId(android.media.session.PlaybackState$Builder,long)
com.google.android.gms.internal.firebase-auth-api.zzjq
com.facebook.share.internal.DeviceShareDialogFragment$RequestState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setTitle(android.media.MediaDescription$Builder,java.lang.CharSequence)
androidx.fragment.app.FragmentContainerView
androidx.work.impl.background.systemjob.SystemJobService: SystemJobService()
com.facebook.internal.instrument.InstrumentData$Type: com.facebook.internal.instrument.InstrumentData$Type[] values()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
androidx.work.ArrayCreatingInputMerger
androidx.media2.session.ThumbRatingParcelizer: void write(androidx.media2.session.ThumbRating,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newUnratedRating(int)
androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzgx: com.google.android.gms.internal.firebase-auth-api.zzha zze
androidx.media2.common.SubtitleDataParcelizer: SubtitleDataParcelizer()
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
android.support.v4.media.session.MediaSessionCompat$QueueItem$Api21Impl: android.media.session.MediaSession$QueueItem createQueueItem(android.media.MediaDescription,long)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.DefaultLifecycleObserver
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String)
com.facebook.FacebookAuthorizationException: long serialVersionUID
io.flutter.embedding.android.FlutterSurfaceView
androidx.media2.session.SessionCommandGroupParcelizer: void write(androidx.media2.session.SessionCommandGroup,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
com.facebook.share.model.ShareHashtag: android.os.Parcelable$Creator CREATOR
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.appcompat.widget.ActionBarContainer
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.google.android.gms.internal.firebase-auth-api.zzfc: com.google.android.gms.internal.firebase-auth-api.zzyu zzg
androidx.lifecycle.ProcessLifecycleOwner$3
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.gms.internal.firebase-auth-api.zzfx: int zze
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.firebase-auth-api.zzmw: android.os.Parcelable$Creator CREATOR
com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$EventType: com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$EventType valueOf(java.lang.String)
androidx.media2.session.HeartRatingParcelizer
androidx.appcompat.view.menu.ExpandedMenuView
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
androidx.media2.session.ThumbRatingParcelizer: androidx.media2.session.ThumbRating read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.google.android.gms.internal.firebase-auth-api.zzxd: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.google.android.gms.internal.firebase-auth-api.zzme: android.os.Parcelable$Creator CREATOR
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator[] values()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.google.common.primitives.Floats$FloatArrayAsList: long serialVersionUID
com.google.android.gms.internal.firebase-auth-api.zzim: java.lang.String zze
com.google.android.gms.safetynet.zzh: android.os.Parcelable$Creator CREATOR
com.google.common.collect.Multimaps$CustomListMultimap: void writeObject(java.io.ObjectOutputStream)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
me.carda.awesome_notifications.notifications.broadcastReceivers.DismissedNotificationReceiver: DismissedNotificationReceiver()
androidx.media2.session.PlaybackInfoParcelizer: void write(androidx.media2.session.MediaController$PlaybackInfo,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.firebase-auth-api.zziq: int zzf
com.google.android.gms.internal.firebase-auth-api.zzhj
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.google.common.collect.ImmutableMultimap$Values
androidx.activity.ComponentActivity
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
androidx.media2.session.CommandButtonParcelizer: androidx.media2.session.MediaSession$CommandButton read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
com.google.android.gms.internal.firebase-auth-api.zzgp
com.facebook.share.model.ShareOpenGraphContent: android.os.Parcelable$Creator CREATOR
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values()
com.google.android.gms.internal.firebase-auth-api.zzfc
com.google.android.exoplayer2.metadata.icy.IcyInfo: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.google.android.gms.internal.firebase-auth-api.zzht
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
me.carda.awesome_notifications.notifications.enumeratos.NotificationPrivacy: me.carda.awesome_notifications.notifications.enumeratos.NotificationPrivacy[] values()
com.google.android.gms.internal.firebase-auth-api.zzno: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean)
com.google.android.gms.internal.firebase-auth-api.zzir: com.google.android.gms.internal.firebase-auth-api.zzaab zzf
com.google.gson.JsonParseException: long serialVersionUID
io.flutter.view.FlutterView: io.flutter.view.FlutterNativeView getFlutterNativeView()
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.google.common.collect.EmptyImmutableListMultimap: java.lang.Object readResolve()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.media2.session.StarRating
com.google.android.gms.internal.firebase-auth-api.zzho: com.google.android.gms.internal.firebase-auth-api.zzho zzb
androidx.media2.common.BitmapEntryParcelizer: BitmapEntryParcelizer()
androidx.appcompat.widget.ActionMenuView
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: android.os.Parcelable$Creator CREATOR
androidx.media2.session.MediaLibraryService$LibraryParams: MediaLibraryService$LibraryParams()
androidx.media.AudioAttributesImplApi26
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.google.common.collect.ImmutableSet: java.lang.Object writeReplace()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzzp: com.google.android.gms.internal.firebase-auth-api.zzzp[] values()
com.google.gson.internal.LazilyParsedNumber: java.lang.Object writeReplace()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatEditText
com.google.android.gms.internal.firebase-auth-api.zziz: com.google.android.gms.internal.firebase-auth-api.zziz zzb
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: android.os.Parcelable$Creator CREATOR
androidx.savedstate.Recreator
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ProcessLifecycleOwnerInitializer
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
androidx.media2.common.ParcelImplListSlice
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.cardview.widget.CardView: float getCardElevation()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setBufferedPosition(android.media.session.PlaybackState$Builder,long)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.google.common.base.Absent: long serialVersionUID
androidx.lifecycle.SavedStateHandleController$OnRecreation
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzgj: int zze
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter waiters
com.google.common.collect.RegularImmutableSet
androidx.appcompat.widget.SearchView
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
android.support.v4.media.MediaBrowserCompat$Api21Impl: int getFlags(android.media.browse.MediaBrowser$MediaItem)
androidx.media.app.NotificationCompat$Api21Impl: void setMediaSession(android.app.Notification$MediaStyle,android.media.session.MediaSession$Token)
androidx.media2.session.ConnectionResult: ConnectionResult()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: long serialVersionUID
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback
androidx.lifecycle.ProcessLifecycleOwner$3$1
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String)
androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object value
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.google.android.gms.internal.firebase-auth-api.zzfl: com.google.android.gms.internal.firebase-auth-api.zzyu zzg
androidx.media2.session.SessionResult: SessionResult()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.google.firebase.auth.internal.RecaptchaActivity
io.flutter.plugins.GeneratedPluginRegistrant
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.media2.session.SessionTokenImplBaseParcelizer
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.appcompat.widget.AppCompatImageButton
com.facebook.internal.FetchedAppSettingsManager$FetchAppSettingState: com.facebook.internal.FetchedAppSettingsManager$FetchAppSettingState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
android.support.v4.media.RatingCompat$Api19Impl: boolean hasHeart(android.media.Rating)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: int getState(android.media.session.PlaybackState)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.facebook.internal.FetchedAppSettingsManager$FetchAppSettingState: com.facebook.internal.FetchedAppSettingsManager$FetchAppSettingState[] values()
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.google.android.gms.internal.firebase-auth-api.zzgm: com.google.android.gms.internal.firebase-auth-api.zzgm zzb
com.google.android.gms.internal.firebase-auth-api.zzgu: com.google.android.gms.internal.firebase-auth-api.zzgu zzb
androidx.versionedparcelable.ParcelImpl
com.google.android.gms.internal.firebase-auth-api.zzir
androidx.media2.common.VideoSizeParcelizer: VideoSizeParcelizer()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
android.support.v4.media.RatingCompat$Api19Impl: boolean isRated(android.media.Rating)
com.google.android.gms.internal.firebase-auth-api.zzgx: com.google.android.gms.internal.firebase-auth-api.zzgx zzb
me.carda.awesome_notifications.externalLibs.CronExpression
com.facebook.internal.CallbackManagerImpl$RequestCodeOffset: com.facebook.internal.CallbackManagerImpl$RequestCodeOffset[] values()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzim: boolean zzh
androidx.media.app.NotificationCompat$Api15Impl: void setContentDescription(android.widget.RemoteViews,int,java.lang.CharSequence)
com.google.android.gms.internal.firebase-auth-api.zzji: java.lang.String zze
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.firebase-auth-api.zzmm: android.os.Parcelable$Creator CREATOR
androidx.media2.session.SessionTokenImplBaseParcelizer: androidx.media2.session.SessionTokenImplBase read(androidx.versionedparcelable.VersionedParcel)
com.facebook.appevents.AppEvent: java.lang.Object writeReplace()
androidx.media2.session.LibraryResultParcelizer: void write(androidx.media2.session.LibraryResult,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.places.Places
androidx.media2.session.SessionTokenImplLegacy: SessionTokenImplLegacy()
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.login.DeviceAuthDialog
io.flutter.plugin.platform.SingleViewPresentation: int viewId
androidx.media2.session.ConnectionResult
androidx.media2.session.LibraryParamsParcelizer: void write(androidx.media2.session.MediaLibraryService$LibraryParams,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
com.facebook.internal.FacebookInitProvider
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.google.common.reflect.TypeToken$SimpleTypeToken
io.flutter.embedding.android.FlutterImageView
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener listeners
androidx.media2.session.SessionTokenImplLegacyParcelizer: androidx.media2.session.SessionTokenImplLegacy read(androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.metadata.id3.BinaryFrame: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
com.facebook.login.Login
androidx.cardview.widget.CardView: void setRadius(float)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.media2.session.PercentageRatingParcelizer
androidx.lifecycle.ViewModel: ViewModel()
com.google.android.gms.internal.firebase-auth-api.zzha
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newPercentageRating(float)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.google.android.gms.common.api.internal.LifecycleCallback
android.support.v4.media.session.PlaybackStateCompat$CustomAction
androidx.appcompat.widget.AppCompatAutoCompleteTextView
com.google.android.gms.internal.firebase-auth-api.zzir: int zze
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: com.google.android.exoplayer2.video.VideoFrameMetadataListener getVideoFrameMetadataListener()
com.google.android.exoplayer2.video.ColorInfo: android.os.Parcelable$Creator CREATOR
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setDescription(android.media.MediaDescription$Builder,java.lang.CharSequence)
com.google.android.gms.internal.firebase-auth-api.zzgj
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.google.android.gms.internal.firebase-auth-api.zzfl: com.google.android.gms.internal.firebase-auth-api.zzfr zzf
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.media2.session.PercentageRating
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.media.session.PlaybackState$CustomAction build(android.media.session.PlaybackState$CustomAction$Builder)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.media2.common.MediaMetadataParcelizer: MediaMetadataParcelizer()
androidx.media2.common.SessionPlayer$TrackInfo
com.facebook.appevents.PersistedEvents$SerializationProxyV1
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
android.support.v4.media.AudioAttributesCompatParcelizer
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.media2.common.CallbackMediaItem
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.media.session.PlaybackState$CustomAction$Builder createCustomActionBuilder(java.lang.String,java.lang.CharSequence,int)
com.ryanheise.just_audio.AudioPlayer$ProcessingState: com.ryanheise.just_audio.AudioPlayer$ProcessingState[] values()
androidx.media2.common.BitmapEntryParcelizer: androidx.media2.common.MediaMetadata$BitmapEntry read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.media2.session.ThumbRating: ThumbRating()
com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate valueOf(java.lang.String)
kotlin.text.Regex$Serialized: long serialVersionUID
com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$ServiceResult: com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$ServiceResult[] values()
me.carda.awesome_notifications.notifications.enumeratos.NotificationSource: me.carda.awesome_notifications.notifications.enumeratos.NotificationSource[] values()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setSubtitle(android.media.MediaDescription$Builder,java.lang.CharSequence)
com.google.android.gms.internal.firebase-auth-api.zzfc: int zze
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.media2.session.ThumbRatingParcelizer: ThumbRatingParcelizer()
com.facebook.core.Core
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.google.firebase.auth.zze: android.os.Parcelable$Creator CREATOR
com.google.common.collect.RegularImmutableList
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion[] values()
com.google.android.gms.internal.firebase-auth-api.zzwq: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setExtras(android.media.MediaDescription$Builder,android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzij: com.google.android.gms.internal.firebase-auth-api.zzyu zzf
com.google.android.gms.internal.firebase-auth-api.zzji: com.google.android.gms.internal.firebase-auth-api.zzji zzb
com.google.common.collect.ImmutableList$SubList
androidx.media.app.NotificationCompat$Api21Impl: void setShowActionsInCompactView(android.app.Notification$MediaStyle,int[])
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: com.google.android.exoplayer2.video.spherical.CameraMotionListener getCameraMotionListener()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.google.android.gms.internal.firebase-auth-api.zzew
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] values()
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
com.google.android.gms.internal.firebase-auth-api.zznc: android.os.Parcelable$Creator CREATOR
androidx.media.AudioAttributesImplApi21Parcelizer
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.google.android.gms.internal.firebase-auth-api.zzhg: int zze
androidx.fragment.app.FragmentManagerViewModel
com.google.gson.internal.LazilyParsedNumber
com.google.android.gms.common.api.internal.zzd: zzd()
androidx.appcompat.widget.AppCompatImageView
androidx.media2.session.MediaSession$CommandButton
androidx.media2.session.StarRatingParcelizer: void write(androidx.media2.session.StarRating,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
com.google.android.gms.internal.firebase-auth-api.zzlw: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.google.android.gms.internal.firebase-auth-api.zzjn: java.lang.String zze
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.google.android.gms.internal.firebase-auth-api.zzij: com.google.android.gms.internal.firebase-auth-api.zzij zzb
com.google.android.gms.internal.firebase-auth-api.zzhw: int zzf
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
me.carda.awesome_notifications.notifications.enumeratos.GroupAlertBehaviour: me.carda.awesome_notifications.notifications.enumeratos.GroupAlertBehaviour valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
me.carda.awesome_notifications.notifications.broadcastReceivers.DismissedNotificationReceiver
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.facebook.applinks.AppLinks: AppLinks()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
androidx.media2.session.SessionResultParcelizer
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
me.carda.awesome_notifications.notifications.enumeratos.DefaultRingtoneType: me.carda.awesome_notifications.notifications.enumeratos.DefaultRingtoneType valueOf(java.lang.String)
androidx.media2.common.BitmapEntryParcelizer
kotlin.collections.EmptyMap
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.HttpMethod: com.facebook.HttpMethod[] values()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.work.impl.foreground.SystemForegroundService: SystemForegroundService()
com.google.android.gms.internal.firebase-auth-api.zzng: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
com.google.common.base.Absent: java.lang.Object readResolve()
androidx.core.graphics.drawable.IconCompatParcelizer
com.ryanheise.just_audio.AudioPlayer$ProcessingState: com.ryanheise.just_audio.AudioPlayer$ProcessingState valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzir: com.google.android.gms.internal.firebase-auth-api.zzir zzb
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.activity.ComponentActivity$4
me.carda.awesome_notifications.notifications.enumeratos.GroupSort: me.carda.awesome_notifications.notifications.enumeratos.GroupSort valueOf(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.google.android.gms.internal.firebase-auth-api.zzfr: com.google.android.gms.internal.firebase-auth-api.zzfr zzb
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getActiveQueueItemId(android.media.session.PlaybackState)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.graphics.Bitmap getIconBitmap(android.media.MediaDescription)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzgx
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.google.common.collect.RegularImmutableMap
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: java.lang.String MODULE_ID
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
com.google.android.gms.internal.firebase-auth-api.zzhj: com.google.android.gms.internal.firebase-auth-api.zzyu zzg
androidx.appcompat.widget.AppCompatSpinner
com.google.android.gms.internal.firebase-auth-api.zzfc: com.google.android.gms.internal.firebase-auth-api.zzfc zzb
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.google.android.gms.internal.firebase-auth-api.zzww: android.os.Parcelable$Creator CREATOR
androidx.media.AudioAttributesCompat
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.facebook.login.Login: Login()
com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion valueOf(java.lang.String)
androidx.media2.session.SessionTokenImplBaseParcelizer: SessionTokenImplBaseParcelizer()
me.carda.awesome_notifications.notifications.broadcastReceivers.KeepOnTopActionReceiver: KeepOnTopActionReceiver()
com.google.common.reflect.TypeToken
me.carda.awesome_notifications.notifications.broadcastReceivers.ScheduledNotificationReceiver: ScheduledNotificationReceiver()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.google.android.gms.internal.firebase-auth-api.zzet
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.media2.session.MediaControllerImplLegacy$2
com.google.firebase.auth.FirebaseAuthRegistrar
com.google.android.gms.internal.firebase-auth-api.zzjq: com.google.android.gms.internal.firebase-auth-api.zzjq zzb
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.firebase-auth-api.zzhd
com.google.common.collect.ImmutableMultimap$Values: long serialVersionUID
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.google.common.collect.ComparatorOrdering: long serialVersionUID
androidx.work.impl.diagnostics.DiagnosticsReceiver: DiagnosticsReceiver()
com.facebook.HttpMethod: com.facebook.HttpMethod valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzga: com.google.android.gms.internal.firebase-auth-api.zzga zzb
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.media.app.NotificationCompat$Api21Impl: void setMediaStyle(android.app.Notification$Builder,android.app.Notification$MediaStyle)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.facebook.login.LoginClient$Result: android.os.Parcelable$Creator CREATOR
androidx.media2.common.ParcelImplListSlice: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.drm.DrmInitData: android.os.Parcelable$Creator CREATOR
androidx.media2.session.SessionTokenImplLegacyParcelizer: SessionTokenImplLegacyParcelizer()
kotlin.text.Regex$Serialized: java.lang.Object readResolve()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.zxing.datamatrix.encoder.SymbolShapeHint: com.google.zxing.datamatrix.encoder.SymbolShapeHint[] values()
androidx.fragment.app.Fragment$5
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.facebook.login.LoginClient$Result$Code: com.facebook.login.LoginClient$Result$Code valueOf(java.lang.String)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
com.facebook.FacebookServiceException: long serialVersionUID
com.google.android.gms.internal.firebase-auth-api.zzie: java.lang.String zze
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: java.lang.String getAction(android.media.session.PlaybackState$CustomAction)
com.google.common.collect.ImmutableListMultimap: long serialVersionUID
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
com.google.common.reflect.TypeToken: long serialVersionUID
androidx.media2.session.SessionTokenParcelizer
com.google.android.gms.internal.firebase-auth-api.zzho
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.facebook.CurrentAccessTokenExpirationBroadcastReceiver: CurrentAccessTokenExpirationBroadcastReceiver()
android.support.v4.media.RatingCompat$Api19Impl: float getStarRating(android.media.Rating)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: SsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.media2.session.SessionCommandParcelizer: SessionCommandParcelizer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
androidx.appcompat.widget.SearchView: int getInputType()
com.google.firebase.auth.internal.zzr: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.media2.session.MediaController$PlaybackInfo
com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$EventType: com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$EventType[] values()
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] values()
androidx.media2.session.LibraryResult
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList
androidx.fragment.app.FragmentActivity
androidx.appcompat.widget.ScrollingTabContainerView
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.gms.internal.firebase-auth-api.zzlo: android.os.Parcelable$Creator CREATOR
com.google.common.reflect.Types$ClassOwnership: com.google.common.reflect.Types$ClassOwnership valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.google.android.gms.internal.firebase-auth-api.zzly: android.os.Parcelable$Creator CREATOR
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
androidx.media2.session.LibraryParamsParcelizer: androidx.media2.session.MediaLibraryService$LibraryParams read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setErrorMessage(android.media.session.PlaybackState$Builder,java.lang.CharSequence)
com.google.android.gms.internal.firebase-auth-api.zzmo: android.os.Parcelable$Creator CREATOR
com.google.firebase.auth.internal.zzag: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.id3.InternalFrame: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
com.google.android.gms.internal.firebase-auth-api.zzfl: int zze
com.facebook.FacebookOperationCanceledException: long serialVersionUID
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
android.support.v4.media.session.MediaSessionCompat$QueueItem$Api21Impl: long getQueueId(android.media.session.MediaSession$QueueItem)
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: ConstraintProxy$NetworkStateProxy()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.google.common.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.google.android.gms.internal.firebase-auth-api.zzeq: com.google.android.gms.internal.firebase-auth-api.zzeq zzb
com.google.firebase.auth.FacebookAuthCredential: android.os.Parcelable$Creator CREATOR
vn.hunghd.flutterdownloader.DownloadWorker: DownloadWorker(android.content.Context,androidx.work.WorkerParameters)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.media.MediaDescription$Builder createBuilder()
com.facebook.appevents.AppEventsLogger$FlushBehavior: com.facebook.appevents.AppEventsLogger$FlushBehavior valueOf(java.lang.String)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar: java.util.List getComponents()
com.facebook.CustomTabActivity: CustomTabActivity()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.google.common.collect.ImmutableList: java.lang.Object writeReplace()
com.google.android.gms.internal.firebase-auth-api.zzim
androidx.media2.session.MediaLibraryService$LibraryParams
com.google.android.gms.internal.firebase-auth-api.zzji: com.google.android.gms.internal.firebase-auth-api.zzij zzf
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: DashMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
com.google.common.collect.ReverseNaturalOrdering
androidx.media2.common.MediaMetadata: MediaMetadata()
me.carda.awesome_notifications.notifications.broadcastReceivers.RefreshNotificationBootReceiver
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.appcompat.widget.AlertDialogLayout
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: ModuleDescriptor()
com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType[] values()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.google.android.gms.internal.firebase-auth-api.zzeq: int zze
com.google.android.gms.common.internal.ResolveAccountResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzgg
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AlertController$RecycleListView
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.appcompat.widget.FitWindowsFrameLayout
me.carda.awesome_notifications.notifications.enumeratos.GroupAlertBehaviour: me.carda.awesome_notifications.notifications.enumeratos.GroupAlertBehaviour[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
androidx.lifecycle.ReportFragment$LifecycleCallbacks
androidx.work.impl.workers.ConstraintTrackingWorker
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.facebook.login.DeviceAuthDialog: DeviceAuthDialog()
com.google.common.collect.ImmutableMultimap: long serialVersionUID
com.google.android.gms.internal.firebase-auth-api.zzls: android.os.Parcelable$Creator CREATOR
androidx.media2.session.SessionTokenImplLegacy
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.google.android.gms.internal.firebase-auth-api.zzga: int zze
com.google.common.collect.ReverseNaturalOrdering: long serialVersionUID
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
androidx.work.impl.WorkDatabase_Impl
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String)
io.flutter.view.FlutterView: android.graphics.Bitmap getBitmap()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.facebook.appevents.FlushResult: com.facebook.appevents.FlushResult valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
com.google.android.gms.internal.firebase-auth-api.zzie: com.google.android.gms.internal.firebase-auth-api.zzie zzb
com.ryanheise.audioservice.MediaButtonReceiver
com.google.firebase.auth.internal.GenericIdpActivity
com.google.android.exoplayer2.metadata.mp4.SmtaMetadataEntry: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.facebook.login.WebViewLoginMethodHandler: android.os.Parcelable$Creator CREATOR
com.facebook.referrals.ReferralFragment: ReferralFragment()
com.google.firebase.auth.GithubAuthCredential: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.firebase-auth-api.zziw: com.google.android.gms.internal.firebase-auth-api.zziw zzb
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
com.facebook.appevents.codeless.internal.PathComponent$MatchBitmaskType: com.facebook.appevents.codeless.internal.PathComponent$MatchBitmaskType[] values()
com.google.android.gms.internal.firebase-auth-api.zzen: com.google.android.gms.internal.firebase-auth-api.zzet zzg
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.savedstate.SavedStateRegistry$1
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.android.gms.internal.firebase-auth-api.zzgd: int zzf
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
com.google.common.collect.EmptyImmutableListMultimap
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.facebook.all.All: All()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
androidx.media2.session.ConnectionRequestParcelizer
com.google.android.gms.internal.firebase-auth-api.zzgj: com.google.android.gms.internal.firebase-auth-api.zzgj zzb
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
io.flutter.view.AccessibilityViewEmbedder
com.google.android.gms.internal.firebase-auth-api.zzhg: com.google.android.gms.internal.firebase-auth-api.zzyu zzg
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.media2.common.MediaMetadata$BitmapEntry
com.facebook.appevents.codeless.internal.PathComponent$MatchBitmaskType: com.facebook.appevents.codeless.internal.PathComponent$MatchBitmaskType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
androidx.work.impl.background.systemalarm.ConstraintProxy: ConstraintProxy()
com.google.android.gms.common.internal.zzs: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.media2.session.ConnectionResultParcelizer: androidx.media2.session.ConnectionResult read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.google.gson.internal.LinkedTreeMap
androidx.appcompat.widget.AppCompatButton
android.support.v4.media.MediaDescriptionCompat$Api23Impl: android.net.Uri getMediaUri(android.media.MediaDescription)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.CharSequence getTitle(android.media.MediaDescription)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.google.android.gms.auth.api.signin.internal.SignInHubActivity
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
androidx.activity.ComponentActivity$3
io.flutter.view.FlutterView: void setInitialRoute(java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getPosition(android.media.session.PlaybackState)
com.google.common.collect.SingletonImmutableSet
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
com.google.android.gms.internal.firebase-auth-api.zzen: com.google.android.gms.internal.firebase-auth-api.zzen zzb
me.carda.awesome_notifications.notifications.enumeratos.NotificationLayout: me.carda.awesome_notifications.notifications.enumeratos.NotificationLayout valueOf(java.lang.String)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.facebook.internal.FeatureManager$Feature: com.facebook.internal.FeatureManager$Feature[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.media2.session.SessionCommandParcelizer
com.google.android.gms.internal.firebase-auth-api.zzjf
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: long serialVersionUID
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
com.facebook.login.LoginFragment: LoginFragment()
androidx.work.impl.background.systemalarm.RescheduleReceiver
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.google.android.gms.internal.firebase-auth-api.zzfi: int zze
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.google.android.gms.internal.firebase-auth-api.zzwu: android.os.Parcelable$Creator CREATOR
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides[] values()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
kotlin.text.Regex$Serialized
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: ConstraintProxy$BatteryChargingProxy()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
com.facebook.login.LoginBehavior: com.facebook.login.LoginBehavior[] values()
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: ForceStopRunnable$BroadcastReceiver()
com.google.android.gms.internal.firebase-auth-api.zzjt: com.google.android.gms.internal.firebase-auth-api.zzjt zzb
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
com.facebook.share.model.ShareLinkContent: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzgg: int zze
com.google.common.primitives.Ints$IntArrayAsList: long serialVersionUID
com.google.android.gms.internal.firebase-auth-api.zzgd: int zze
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.media2.session.SessionCommand
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.os.Bundle getExtras(android.media.MediaDescription)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
android.support.v4.media.session.PlaybackStateCompat$Api22Impl: void setExtras(android.media.session.PlaybackState$Builder,android.os.Bundle)
com.google.android.exoplayer2.audio.AudioCapabilities$Api29: int[] getDirectPlaybackSupportedEncodingsV29()
com.google.android.gms.safetynet.zza: android.os.Parcelable$Creator CREATOR
androidx.media2.session.StarRating: StarRating()
com.google.android.gms.auth.api.signin.internal.SignInConfiguration: android.os.Parcelable$Creator CREATOR
androidx.work.impl.utils.futures.AbstractFuture$Waiter: androidx.work.impl.utils.futures.AbstractFuture$Waiter next
com.facebook.login.LoginClient$Request: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzjc: java.lang.String zze
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
