import 'package:elf_play/config/app_hive_boxes.dart';
import 'package:elf_play/config/enums.dart';
import 'package:elf_play/data/data_providers/home_data_provider.dart';
import 'package:elf_play/data/models/album.dart';
import 'package:elf_play/data/models/api_response/home_page_data.dart';
import 'package:elf_play/data/models/category.dart';
import 'package:elf_play/data/models/group.dart';
import 'package:elf_play/data/models/playlist.dart';
import 'package:elf_play/data/models/song.dart';

class HomeDataRepository {
  //INIT PROVIDER FOR API CALL
  final HomeDataProvider homeDataProvider;

  const HomeDataRepository({required this.homeDataProvider});

  Future<HomePageData> getHomeData(AppCacheStrategy appCacheStrategy) async {
    final List<Song> recentlyPlayed;
    final List<Category> categories;
    final List<Group> adminGroups;
    final List<Group> autogeneratedGroups;
    final List<Album> featuredAlbums;
    final List<Playlist> featuredPlaylist;

    var response = await homeDataProvider.getRawHomeData(appCacheStrategy);

    //GET RECENTLY PLAYED FROM HIVE
    recentlyPlayed =
        AppHiveBoxes.instance.recentlyPlayedBox.values.toList().map((e) {
      return e as Song;
    }).toList();

    //PARSE CATEGORIES
    categories = (response.data['categories'] as List)
        .map((category) => Category.fromMap(category))
        .toList();

    //PARSE GROUPS FROM ADMIN
    adminGroups = (response.data['admin_groups'] as List)
        .map((group) => Group.fromMap(group, true))
        .toList();

    //PARSE AUTO GENERATED GROUPS
    autogeneratedGroups = (response.data['autogenerated_groups'] as List)
        .map((group) => Group.fromMap(group, false))
        .toList();

    //PARSE FEATURED ALBUMS
    featuredAlbums = (response.data['featured_album'] as List)
        .map((album) => Album.fromMap(album))
        .toList();

    //PARSE FEATURED PLAYLISTS
    featuredPlaylist = (response.data['featured_playlist'] as List)
        .map((playlist) => Playlist.fromMap(playlist))
        .toList();

    HomePageData homePageData = HomePageData(
        recentlyPlayed: recentlyPlayed,
        categories: categories,
        adminGroups: adminGroups,
        response: response,
        featuredAlbums: featuredAlbums,
        featuredPlaylist: featuredPlaylist,
        autogeneratedGroups: autogeneratedGroups);

    return homePageData;
  }

  cancelDio() {
    homeDataProvider.cancel();
  }
}
